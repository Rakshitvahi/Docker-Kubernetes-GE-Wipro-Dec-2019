What is Docker?
    Container mgmt tool.

13.232.160.234
ec2-user

How to install docker engine in RHEL/CENT 7 
https://www.devopsschool.com/tutorial/docker/install-config/
https://www.devopsschool.com/tutorial/docker/install-config/docker-install-commuityedition-centos-rhel.html

 1  clear
    2  ls
    3  sudo yum install -y yum-utils device-mapper-persistent-data lvm2
    4  clear
    5  sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    6  sudo yum install â€“y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    7  sudo yum-config-manager --enable rhui-REGION-rhel-server-extras
    8  sudo yum install -y docker-ce
    9  clear
   10  docker
   11  clear
   12  docker version
   13  sudo systemctl enable docker
   14  sudo systemctl start docker
   15  clear
   16  docker version
   17  clear
   18  which docker
   19  ps -eaf | grep docker
   20  history
   ================================


What is Container?
    USER SPACE with their own
                    NAME SPACE      
                            NET NS
                            PMAP NS
                            MNT NS
                                    POWERED BY DOCKER 
                                        WITH A HELP OF libcontaner .from Kenal.
================================================================
Vms lifecycle
-----------------
create -> start -> stop -> restart -> pause -> unpause -> stop -> remove.
==========================================================================
12  docker images
   13  docker create jenkins
   14  clear
   15  docker ps
   16  docker ps -a
   17  docker start f7dfeebb3e3e
   18  docker ps -a
   19  clear
   20  docker ps
   21  docker stop f7dfeebb3e3e
   22  docker ps
   23  docker ps -a
   24  clear
   25  docker restart f7dfeebb3e3e
   26  docker ps -a
   27  docker pause f7dfeebb3e3e
   28  docker ps -a
   29  docker unpause f7dfeebb3e3e
   30  docker ps -a
   31  docker pause f7dfeebb3e3e
   32  clear
   33  docker ps -a
   34  docker inspect f7dfeebb3e3e | grep -i ip
   35  ping 172.17.0.2
   36  docker exec -it 172.17.0.2 /bin/bash
   37  docker exec -it f7dfeebb3e3e /bin/bash
   38  docker unpause f7dfeebb3e3e
   39  clear
   40  docker ps -a
   41  docker stop f7dfeebb3e3e
   42  docker ps -a
   43  docker rm f7dfeebb3e3e
   44  docker ps -a
   45  history

What App we want to run inside a container?
-------------------------------------------
apache
ps
java
python
node
gradle
maven
vnc server
-----------------------
JENKINS
    JDK -> JENKINS
            web - node
            8080    50000
--------------------------------

http://bit.ly/2DC4Ca0

1 13.233.160.119
2 15.206.88.192
3 13.233.160.4
4 35.154.30.249
5 52.66.100.17
6 15.206.194.65
7 15.206.178.147
8 13.233.126.56
9 13.232.181.172
10 13.232.27.16
11 13.233.41.79
12 13.233.152.149
13 13.127.152.142
14 13.235.48.198
15 13.232.145.189
16 52.66.234.237
17 15.206.185.188
18 52.66.249.90

User Name - ec2-user
PPK - https://www.devopsschool.com/notes/docker/2019/
 	rajesh-mumbai.ppk

PEM - 
    https://www.devopsschool.com/notes/docker/2019/
    rajesh-mumbai.pem
===============================================================
What IS PID 1?
PM - SYSTEMD
VM - SYSTEMD
Container - ANY THING

How to access a Container?
---------------------------
    How to get inside a container?
    - Exec way
        It execute an executables INSIDE A Container.
            but -it and /bin/bash
    - Attach way
        It attach to PID 1

How to come out of container SAFTly?
CTRIL + P + Q
------------
run - 
    create -> start -> attach

    How to access a container from outside?
    - Browsers
    docker run -p 8080:8080 -d jenkins
    docker run -p 8090:8080 -d jenkins
   
    - SSH
    ssh -i key.pem user@cont-ip
============================================
Working with Container
https://www.devopsschool.com/tutorial/docker/commands/



 175  docker cp devopsschool.txt 1bc5dcee72e2:/opt
  176  docker exec 1bc5dcee72e2 ls /opt
  177  ls
  178  rm -rf devopsschool.txt
  179  clear
  180  ls
  181  ls
  182  docker cp 1bc5dcee72e2:/opt/devopsschool.txt .


    209  docker ps
  210  docker port 1bc5dcee72e2
  211  docker run -d jenkins
  212  docker ps
  213  docker port e407674ccb05
  214  docker run -d -p 8080:8080 jenkins
  215  docker ps
  216  docker port 7fbaeb4cdf3fs
  217  history

  220  docker run -d --name jenkins1 jenkins
  221  docker ps
  222  docker rename 7fbaeb4cdf3f jenkins2
  223  clear
  224  docker ps

https://www.devopsschool.com/tutorial/docker/commands/
Working with Images
==========================================DAY 2 ====================
13.234.31.78

 9  docker info
   10  clear
   11  ls
   12  cd /var/lib/docker
   13  clear
   14  ls
   15  cd overlay2
   16  ls
   17  docker pull ubuntu
   18  clear
   19  ls
   20  docker inspect ubuntu
   21  clear
   22  docker history ubuntu
   23  du -h --max-depth=1
   24  cd ./80201312606b4ccb1d50cc13915b761c5c9f30255eead6965605692d6ec1bd9c
   25  clear
   26  ls
   27  cd diff/
   28  clear
   29  ls
   30  cd ../..
   31  ls
   32  du -h --max-depth=1
   33  cd ./c99fc0cc3ca66abcbbf451d0112aa43466c0cb7a85f546f2ef928ec8a2901c4e
   34  clear
   35  ls
   36  cd diff/
   37  ls
   38  cd var/

   ==========================
   jenkins
        openjdk:8-jdk
                buildpack-deps:stretch-scm
                        buildpack-deps:stretch-curl
                                    debian:stretch
                                            scratch

==================================================
There are 2 method to create image.
        - Using Container
----------
1  clear
    2  cd
    3  ls
    4  pwd
    5  docker ps -a
    6  docker stop 7fd2b6efa32d 4b75a4d8af3f
    7  docker rm 7fd2b6efa32d 4b75a4d8af3f
    8  clear
    9  ls
   10  docker ps
   11  docker run -itd ubuntu
   12  clear
   13  docker ps
   14  docker exec d07a3806b7fd git
   15  docker attach d07a3806b7fd
   16  docker ps
   17  docker exec rchive.ubuntu.com/ubuntu bionic-backports InRelease
   18  docker ps
   19  docker exec d07a3806b7fd git
   20  docker run -itd ubuntu
   21  docker -s
   22  docker ps
   23  docker exec 98d170838feb git
   24  docker diff d07a3806b7fd
   25  ckear
   26  clear
   27  ls
   28  clear
   29  ls
   30  clear
   31  ls
   32  docker history ubuntu
   33  docker ps
   34  docker commit -m"git-up-ub" -a"Rajeshk" d07a3806b7fd git-up-ub
   35  docker images
   36  docker history ubuntu
   37  docker history git-up-ub
   38  docker ps
   39  docker stop 98d170838feb d07a3806b7fd
   40  docker rm 98d170838feb d07a3806b7fd
   41  docker ps
   42  docker images
   43  docker run -itd git-up-ub
   44  docker ps
   45  docker exec 6c88c7198fc3 git
   46  clear

-----------------


        - Using Dockerfile.

FROM ubuntu
MAINTAINER Rajesh K DevOps@Rajeshkumar.xyz
RUN apt-get update && apt-get install git -y


docker build -t ub-up-git-2 .


1 13.235.76.240
2 13.232.220.99
3 15.206.165.208
4 52.66.187.137
5 13.234.21.95
6 13.233.146.86
7 15.206.127.68
8 13.235.87.86
9 13.232.64.87
10 52.66.246.96
11 52.66.246.242
12 35.154.222.140
13 52.66.176.66
14 52.66.239.202
15 35.154.210.161
16 13.233.136.114
17 15.206.84.33
18 13.127.95.50
19 13.232.10.79
20 15.206.163.31
